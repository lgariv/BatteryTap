name: Release

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build App
    runs-on: macOS-latest

    steps:

    - name: Checkout
      uses: actions/checkout@master

    - name:  Cache dragon dependencies
      id: cache-deps
      uses: actions/cache@v2
      env:
        cache-name: cache-dragon-dependencies
      with:
        path: |
          ~/.dragonbuild/
          /usr/local/Cellar/
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-

    - name: Install Dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: brew install ldid xz

    - name: Link ldid
      if: steps.cache-deps.outputs.cache-hit == 'true'
      run: |
        brew link libplist
        brew link ldid

    - name: Setup Dragon
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: |
        set +e
        bash <(curl -sL dr.krit.me)
        set -e

    - name: Update Dragon
      if: steps.cache-deps.outputs.cache-hit == 'true'
      run: dragon update

    - name: Build Package
      id: build_package
      run: |
        dragon build
        echo "::set-output name=package::$(ls -t packages | head -n1)"
        echo "::set-output name=exit_code::$?"

    - name: Manage Version
      if: ${{ steps.build_package.outputs.package != 0 }}
      run: |
        set +e
        git fetch --prune --unshallow --tags
        VERSION="$(cat control | grep Version | sed -n 's/Version: //gp')"
        echo "::set-env name=TWEAK_VER::$VERSION"
        CUR_TAG="$(git tag -l | grep beta)"
        if [[ -z $CUR_TAG ]]; then
          echo "::set-env name=OLD_PRE_TAG::"
        else
          echo "::set-env name=OLD_PRE_TAG::$CUR_TAG"
        fi
        exit 0
        set -e

    - name: Delete Old Prerelease (if there are any)
      uses: dev-drprasad/delete-tag-and-release@v0.1.2
      if: ${{ env.OLD_PRE_TAG != 0 && steps.build_package.outputs.package != 0 }}
      with:
        tag_name: ${{ env.OLD_PRE_TAG }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      if: ${{ steps.build_package.outputs.package != 0 }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.TWEAK_VER }}-beta
        release_name: Beta v${{ env.TWEAK_VER }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      if: ${{ steps.build_package.outputs.package != 0 }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}          
        asset_path: ./packages/${{ steps.build_package.outputs.package }}
        asset_name: ${{ steps.build_package.outputs.package }}
        asset_content_type: application/vnd.debian.binary-package